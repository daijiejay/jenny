#服务名称
spring.application.name: api-doc
#服务端口号
server.port: 12502

#eureka注册中心地址
eureka.client.serviceUrl.defaultZone: http://127.0.0.1:8761/eureka/
#是否设置注册优些IP地址
eureka.instance.preferIpAddress: true

#启用默认执行超时
hystrix.command.default.execution.timeout.enabled: true
##开启重试机制
#spring.cloud.loadbalancer.retry.enabled: true
##断路器的超时时间,断路器的超时时间需要大于ribbon的超时时间，不然不会触发重试。
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 10000
##设置线程池大小
#hystrix.threadpool.default.coreSize: 100
#请求连接的超时时间
ribbon.ConnectTimeout: 5000
#请求处理的超时时间
ribbon.ReadTimeout: 5000
##对所有操作请求都进行重试
#ribbon.OkToRetryOnAllOperations: true
##对当前实例的重试次数
#ribbon.MaxAutoRetries: 1
##对下个实例的重试次数
#ribbon.MaxAutoRetriesNextServer: 2

#对象转json串时，去除为null的属性
#spring.jackson.default-property-inclusion: non_null
#指定jackson日期转换格式
spring.jackson.date-format: yyyy-MM-dd HH\:mm\:ss
#指定jackson日期转换时区
spring.jackson.time-zone: Asia/Shanghai

#是否开启redis集群
shiro.redis.cluster: false
#服务地址
shiro.redis.address: 127.0.0.1:6379
#访问密码，没有则不用设置
#shiro.redis.password: 
#默认连接超时时间
shiro.redis.connectionTimeout: 5000
#返回值的超时时间
shiro.redis.timeout: 5000
#默认存储超时时间
shiro.redis.expire: 360000
#出现异常最大重试次数
shiro.redis.maxAttempts: 1
#设置session过期时间
shiro.sesseionTimeOut: -1

#是否开启kisso cookie机制
shiro.kissoEnable: false
#加密随机码
kisso.config.signkey: C691d971EJ3H376G81
#cookie名称
kisso.config.cookieName: token
#cookie的作用域，只支持域名，本地可以配置host
kisso.config.cookieDomain: daijie.org
#允许跨域请求的地址集
http.accessControlAllowOrigin: http://127.0.0.1,http://daijie.org
#允许设置headers的字段名
http.accessControlAllowHeaders: Content-Type,Access-Control-Allow-Headers,Access-Control-Allow-Origin,Authorization,X-Requested-With

#开启请求参数body转param，提供者用实体接收参数时省去了@RequestBody注解
http.bodyByParamEanble: true

logging.level.org.daijie: DEBUG

feign.sys: cloud-sys

#swagger文档配置
swagger.basePackage: org.daijie.jenny.api
swagger.groupName: 文件管理相关接口
swagger.title: 文件管理
swagger.description: 接口
swagger.contact: daijie.org
swagger.version: 1.0

#启用Spring Boot Admin Client
spring.boot.admin.client.enabled: true
#这是一个必填的属性，将当前程序的信息注册到Admin Server中，你需要给出Server URL地址，如果需要注册到多个Admin Server，可以用逗号分隔开来
spring.boot.admin.url: http\://localhost\:12503
#当客户端程序发起注册的时候，需要一个请求地址。
spring.boot.admin.api-path: api/application
#如果Admin端设置了用户名密码访问，你也需要在客户端配置它们。
spring.boot.admin.username: admin
spring.boot.admin.password: admin
#注册间隔（程序启动后多久发出注册请求
spring.boot.admin.period: 10000
#如果设置成true，那么上面那个属性就不需要设置了，程序会自动在启动成功后立刻发出注册申请。
spring.boot.admin.auto-registration: true
#当Admin server关闭的时候，自动注销。
spring.boot.admin.auto-deregistration: true
#如果你注册到了多个Admin Server，当他为true的时候，则只会向一个admin server进行注册，否则会同时向所有的admin server进行注册
spring.boot.admin.register-once: true